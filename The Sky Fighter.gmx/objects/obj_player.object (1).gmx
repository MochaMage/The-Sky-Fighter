<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_f22</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_parent_fighter</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Speed Constants
PLAYER_DEFAULT_SPEED = 4;
PLAYER_AFTERBURNER_SPEED = PLAYER_DEFAULT_SPEED + 3;

// Afterburner constants
PLAYER_AFTERBURNER_INCREMENT = 0.10;
PLAYER_AFTERBURNER_DECREMENT = 0.05

// Bullet Constants
PLAYER_BULLET_INTERVAL = room_speed / 10;
PLAYER_BULLET_SPEED = PLAYER_DEFAULT_SPEED * 5;
PLAYER_MAX_GUN_HEAT = 100;
PLAYER_GUN_HEAT_INCREMENT = 10;
PLAYER_GUN_COOLDOWN = 2.5;

// Turning Constants
PLAYER_MAX_TURN_ANGLE = 2;
PLAYER_TURN_INCREMENT = 0.25;
PLAYER_TURN_DECREMENT = 0.50;
PLAYER_SPRITE_DEFAULT = 0;
PLAYER_SPRITE_STD_TURN = 1;
PLAYER_SPRITE_HARD_TURN = 2;
PLAYER_GUN_COOLDOWN_PERIOD = room_speed * 5;
PLAYER_GUN_MAX_HEAT = 100
PLAYER_GUN_HEAT_INCREMENT = PLAYER_GUN_MAX_HEAT / 20;

// Health constants
PLAYER_STARTING_HEALTH = 100;
HEALTH_BAR_WIDTH = 150;
HEALTH_BAR_HEIGHT = 20;

// Missile constants
SCAN_CONE_LENGTH = 600;
SCAN_CONE_ANGLE = 20;
SCAN_SIDE_LENGTH = SCAN_CONE_LENGTH / cos(degtorad(SCAN_CONE_ANGLE));
LOCK_ON_TIME = room_speed * 0.5;

// Goal coordinates for when player leaves play field
goal_x = 0;
goal_y = 0;

// Missile scanning cone triangle coordinates
corner_1_x = 0;
corner_1_y = 0;
corner_2_x = 0;
corner_2_y = 0;

// Missile lock-on state and target
missile_locked_on = false;
missile_target = 0;
lock_on_timer = LOCK_ON_TIME;

// Bullet cooldown
forced_cooldown = false;
gun_heat = 0;
is_shooting = false;

speed = PLAYER_DEFAULT_SPEED;
afterburner = false;
hp = PLAYER_STARTING_HEALTH;
player_state = state.normal;

max_turn_angle = PLAYER_MAX_TURN_ANGLE;
max_afterburner_speed = PLAYER_AFTERBURNER_SPEED;
afterburner_increment = PLAYER_AFTERBURNER_INCREMENT;
afterburner_decrement = PLAYER_AFTERBURNER_DECREMENT;
turn_increment = PLAYER_TURN_INCREMENT;
turn_decrement = PLAYER_TURN_DECREMENT;
default_speed = PLAYER_DEFAULT_SPEED;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(player_state == state.normal)
{
    if(turn_ratio &gt; 0)
    {
        if(turn_angle &lt; turn_ratio * max_turn_angle){
            turn_angle += turn_increment;}
    }
    else if(turn_ratio &lt; 0)
    {
        if(turn_angle &gt; turn_ratio * max_turn_angle){
            turn_angle -= turn_increment;}
    }
    else if(turn_angle != 0){
        turn_angle -= (abs(turn_angle)/turn_angle) * turn_decrement;}
    
    direction += turn_angle;
}
else
{
    mp_potential_settings(60, 30, 3, true);
    var reached_goal = mp_potential_step(goal_x, goal_y, default_speed, false);
    if(reached_goal){
        player_state = state.normal;}
}

if(gun_heat &gt; 0 &amp;&amp; !is_shooting)
{
    if(forced_cooldown)
    {
        gun_heat -=  0.25 * PLAYER_GUN_COOLDOWN;
        if(gun_heat == 0){
            forced_cooldown = false}
    }
    else{
        gun_heat -= PLAYER_GUN_COOLDOWN;}
}
/*
// Get coordinates for missile scanning cone
corner_1_x = x + lengthdir_x(SCAN_SIDE_LENGTH, direction - SCAN_CONE_ANGLE);
corner_2_x = x + lengthdir_x(SCAN_SIDE_LENGTH, direction + SCAN_CONE_ANGLE);

corner_1_y = y + lengthdir_y(SCAN_SIDE_LENGTH, direction - SCAN_CONE_ANGLE);
corner_2_y = y + lengthdir_y(SCAN_SIDE_LENGTH, direction + SCAN_CONE_ANGLE);

if(missile_target)
{
   var in_range = point_in_triangle(missile_target.x, missile_target.y, 
        x, y, corner_1_x, corner_1_y, corner_2_x, corner_2_y);
   if(in_range &amp;&amp; lock_on_timer &gt; 0){
        lock_on_timer--;}
   else if(lock_on_timer == 0){
        missile_locked_on = true;}
   else
   {
        missile_target = 0;
        lock_on_timer = LOCK_ON_TIME;
   }
}
else
{
    for (var i = 0; i &lt; instance_number(obj_enemy); i++)
    {
       var fighter = instance_find(obj_enemy, i);
       var in_range = point_in_triangle(fighter.x, fighter.y, 
            x, y, corner_1_x, corner_1_y, corner_2_x, corner_2_y);
       if(in_range)
       {
            missile_target = fighter;
       }
    }
}
*/
//view_angle = 90 - direction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>other.hp -= 25;
hp -= 25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="88">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>afterburner</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>true</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(speed &lt; PLAYER_AFTERBURNER_SPEED)
{
    speed += PLAYER_AFTERBURNER_INCREMENT;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>turn_ratio</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>turn_ratio</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(can_shoot &amp;&amp; !forced_cooldown)
{
    var bullet = instance_create(x, y, obj_player_bullet);
    with(bullet)
    {
        speed = other.PLAYER_BULLET_SPEED;
        direction = other.direction;
        image_angle = other.image_angle;
    }
    alarm[0] = PLAYER_BULLET_INTERVAL;
    can_shoot = false;
    is_shooting = true;
    gun_heat += PLAYER_GUN_HEAT_INCREMENT;
    
    if(gun_heat == PLAYER_MAX_GUN_HEAT)
    {
        is_shooting = false;
        forced_cooldown = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>player_state = state.outside;
goal_x = xprevious;
goal_y = yprevious;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(0, 500, "Direction: " + string(direction));
draw_text(0, 520, "Turn Ratio: " + string(turn_ratio));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(0.75);
draw_line_width_colour(x, y, 
    lengthdir_x(800, direction) + x, lengthdir_y(800, direction) + y,
    5, c_red, c_orange);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="67">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(missile_locked_on)
{
    var missile = instance_create(x, y, obj_player_missile);
    missile.target = missile_target;
    missile.launcher = id;
    missile.spd = speed;
    missile.direction = direction;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="88">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>afterburner</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>false</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="39">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>turn_ratio</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="37">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>turn_ratio</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>is_shooting = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
