<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enum objective_types {survive, elimination, location, score_target};

active_objective = noone;
// objective_params will contain a key-value map of the
// parameters related to the active objective. Each
// active objective will be concerned with a certain
// set of keys
objective_params = ds_map_create();
is_completed = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_map_destroy(objective_params);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!is_completed)
{
    switch(active_objective)
    {
        case objective_types.elimination:
            // Check whether all enemies have been destroyed
            // keys-values: enemy_type-obj_idx
            if(instance_number(objective_params[? "enemy_type"]) == 0)
            {
                is_completed = true;
            }
            break;
        case objective_types.survive:
            // Player must continue living until level's objective controller
            // changes the state of this objective
            // keys-values: is_completed-bool
            if(objective_params[? "is_completed"])
            {
                is_completed = true;
            }
            break;
        case objective_types.location:
            // Check for a collision with the invisible rectange/circle that
            // will be placed on a map
            // keys-values: place_object-obj_idx
            var place_obj = objective_params[? "place_object"];
            if(place_obj.was_reached)
            {
                is_completed = true;
                instance_destroy(place_obj);
            }
            break;
        case objective_types.score_target:
            // Check whether any of the players has reached the specified score
            // keys-values: score-int
            var players = instance_number(obj_player);
            for(var i = 0; i &lt; players; i++)
            {
                var player = instance_find(obj_player, i);
                var player_score = global.scores[? string(player.player_slot)];
                if(player_score &gt;= objective_params[? "score"])
                {
                    is_completed = true;
                }
            }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
