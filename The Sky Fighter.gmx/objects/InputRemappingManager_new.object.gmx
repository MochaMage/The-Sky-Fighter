<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
    I'm drawing all the text to a surface while i create the
    buttons for each input. This way I don't have to remember
    where the buttons were placed to be able to draw the text
    next to them!
*/
canvas = surface_create(room_width,room_height);
surface_set_target(canvas);

var X = room_width/2 - 25;
var Y = 0;
var INPUT_MANAGER = inputdog_find_inputmanager_child_by_player(global.editPlayerSlot);

instance_create(80,200, ToggleDirectInput);

for(i=0; i&lt;ds_list_size(INPUT_MANAGER.inputs); i++)
{
    var INPUT = ds_list_find_value(INPUT_MANAGER.inputs,i);
    
    Y = 54 + (i*(sprite_get_height(sThinButton)+3));
    
    draw_set_color( c_black );
    draw_set_halign(fa_right);
    draw_set_valign(fa_middle);
    draw_set_font(fButton);
    
    // draw the input text
    draw_text(X-64, Y, INPUT);
    
    // make the keyboard customize button
    with(instance_create(X,Y, SetInput))
    {
        input = INPUT;
    }
    
    // make the gamepad customize button
    with(instance_create(X+sprite_get_width(sThinButton)+64,Y, SetInput))
    {
        input = INPUT;
        gamepad = true;
    }
}
draw_set_color(c_white);
surface_reset_target();

Y+=sprite_get_height(sThinButton)+3;

// default keyboard layout button
with(instance_create(X,Y,LoadDefaultInputs))
    gamepad = false;
    
// default gamepad layout button
with(instance_create(X+sprite_get_width(sFatButton)+64,Y,LoadDefaultInputs))
    gamepad = true;

Y+=sprite_get_height(sFatButton)+3;

// save layouts button
instance_create(X+sprite_get_width(sThinButton)/2+32,Y, SaveInputMapping);

// back to menu room button
instance_create(80, 50, GoToExampleRoom);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(surface_exists(canvas))
    surface_free(canvas);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(surface_exists(canvas))
    draw_surface(canvas,0,0);
else
    room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>4,4</point>
    <point>4,4</point>
  </PhysicsShapePoints>
</object>
